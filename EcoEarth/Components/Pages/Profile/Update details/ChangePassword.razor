@page "/profile/UpdateDetails/ChangePassword"

@using EcoEarthPOC.Models
@inject HttpClient Http
@inject IJSRuntime JS

<h3>Change Password</h3>

<EditForm Model="changePasswordModel" OnValidSubmit="changePassword">
    <InputText @bind-Value="changePasswordModel.UserId" placeholder="userId" />
    <InputText @bind-Value="changePasswordModel.CurrentPassword" placeholder="Current Password" type="password" />
    <InputText @bind-Value="changePasswordModel.NewPassword" placeholder="New Password" type="password" />
    <button type="submit">Change Password</button>
</EditForm>

@if (!string.IsNullOrEmpty(message))
{
    <p>@message</p>
}
@code {
    private ChangePasswordModel changePasswordModel = new ChangePasswordModel();
    private string message;

    private async Task changePassword()
    {
        var token = Setting.UserBasicDetail?.Token;
        var userId = Setting.UserBasicDetail?.UserID;

        if (string.IsNullOrEmpty(token) || string.IsNullOrEmpty(userId))
        {
            message = "You are not logged in.";
            return;
        }

        changePasswordModel.UserId = userId;

        var request = new HttpRequestMessage(HttpMethod.Post, "https://localhost:44371/api/Users/change-password");
        request.Content = JsonContent.Create(changePasswordModel);
        request.Headers.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);

        var response = await Http.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            message = "Password changed successfully!";
        }
        else
        {
            message = "Error: " + await response.Content.ReadAsStringAsync();
        }
    }



    private async Task<string> GetToken()
    {
        return await JS.InvokeAsync<string>("localStorage.getItem", "authToken");
    }


    public class ChangePasswordModel
    {
        public string UserId { get; set; }
        public string CurrentPassword { get; set; }
        public string NewPassword { get; set; }
    }
}