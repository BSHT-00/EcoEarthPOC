@page "/scanner/manualinput"
@inject EcoEarthPOC.Components.Services.OFFPackaging _offService
@using CommunityToolkit.Maui.Core
@using CommunityToolkit.Maui.Alerts

<p>Prefer typing over scanning? Enter the barcode manually below. Ensure each digit is correct to keep your records accurate. Simple and efficient—just like it should be.</p>

<div>
    <label for="inputText">Enter Barcode here:</label>
    <input type="text" id="inputText" @bind="inputText" />
    <button @onclick="Submit">Submit</button>
    <button @onclick="NavigateBack">Back</button>
</div>

@code {
    private string inputText;

    [Inject]
    NavigationManager navigationManager { get; set; }

    // Executed on submit button click
    private async Task Submit()
    {
        try
        {
            // If barcode isn't valid, show a popup
            if (!validateBarcodeNumber(inputText))
            {
                await ShowToast("Invalid barcode, please try again");
            }
            // Otherwise, check if it exists.
            else
            {
                var result = await _offService.GetPackagingInformation(inputText);

                if (result.Status == 0)
                {
                    await ShowToast("Product not found, please try again");
                }
                else
                    // If it does, take the user to the product info page
                    NavigateToMoreInfo();
            }
        }
        catch (Exception ex)
        {
            if(inputText == null)
                await ShowToast("Please enter a barcode number");
            else
                await ShowToast("An error occurred, please try again");
        }
    }

    // In the UK, barcodes can have format: EAN-13 (5901234123457), 
    //                                      UPC-A (036000291452), 
    //                                      EAN-8 (96385074),
    //                                      UPC-E (04252614).
    protected bool validateBarcodeNumber(string barcode)
    {
        // Validate barcode using reg exp
        var regex = new System.Text.RegularExpressions.Regex(@"^(?:\d{8}|\d{12}|\d{13}|\d{6})$");
        return regex.IsMatch(barcode);
    }

    private void NavigateToMoreInfo()
    {
        navigationManager.NavigateTo("/scanner/productinfo/" + inputText);
    }

    // Takes user back to scanner menu
    private void NavigateBack()
    {
        navigationManager.NavigateTo("/scanner/scanner");
    }

    // Method which shows a popup with a message passed as a parameter
    // This element is part of the CommunityToolkit
    private async Task ShowToast(string message)
    {
        CancellationTokenSource cancellationTokenSource = new CancellationTokenSource();
        ToastDuration duration = ToastDuration.Short;
        double fontSize = 14;

        var toast = Toast.Make(message, duration, fontSize);

        await toast.Show(cancellationTokenSource.Token);
    }
}
